Classroom Exercise - 1 

1) Setup AWS S3 and CLI - Push your results to AWS S3 !
2) Write a bash shell and make sure the health check is working !!

============================================================

S3 (Simple Storage Service)

- Files (HTML, Images, CSS, Videos)
- Bucket 

Step 1: AWS S3 Bucket Creation

1) Go to AWS S3 and Create Bucket
2) Name the Bucket and Provide Public Access (folder name: reports-ubuntu)
3) Go to Permission Tab and Edit, Paste, Save It 

{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "AddPerm",
            "Effect": "Allow",
            "Principal": "*",
            "Action": "s3:GetObject",
            "Resource": "arn:aws:s3:::reports-ubuntu/*"
        }
    ]
}

Step 2: Setup AWS Command Line (Inside Ubuntu) to Push the results to S3

Install the AWS CLI:

Before you can run aws configure, you need to have the AWS CLI installed.

[cmd] sudo apt-get update // done this yesterday 
[cmd] sudo apt-get install awscli

Run aws configure:

[cmd] aws configure

You'll be prompted for the following details:

1. AWS Access Key ID: Enter your access key ID.
2. AWS Secret Access Key: Enter your secret access key.
3. Default region name: Enter the default AWS region code
4. Default output format: <none>

Verification through:

[cmd] aws s3 ls

Push the contents (only that got changed) 

[cmd] aws s3 sync reports/ s3://reports-ubuntu

// Do the above command every time you run a test !!

Usecase 1 : Every test execution results - Auto Published in AWS S3 

Pros: - Easy Access, No Deletion, History !
Cons: - Permission

---------------------------------------------------------------

#!/bin/bash

# Threshold (If the values go beyond these thresold - do not run automated tests)
Threshold_CPU=40
Threshold_Mem=45
Threshold_Disk=50

# Condition to allow or not allow to run
bPassed=true

# Memory Check
mem_value=$(free | grep Mem | awk '{print int($3/$2*100)}')
echo $mem_value 
if((mem_value > Threshold_Mem)); then
    echo 'Memory is running beyond your threshold'
    bPassed=false
fi

# CPU Check
cpu_value=$(top -n1 | grep 'Cpu' | awk '{print int($2)}')
echo $cpu_value 
if((cpu_value > Threshold_CPU)); then
    echo 'CPU is running beyond your threshold'
    bPassed=false
fi


# Disk Check
disk_value=$(df / | tail -1 | awk '{ gsub("%",""); print $5}')
echo $disk_value 
if((disk_value > Threshold_Disk)); then
    echo 'Disk is running beyond your threshold'
    bPassed=false
fi

# Check if the condition is false, terminate and do not run test 
if($bPassed); then
    echo "The automated tests can run now as the health check is positive"
fi